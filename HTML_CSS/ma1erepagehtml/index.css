/*Ici on applique le style a body en pointant directement le sélecteur HTML body
si un sélecteur est présent plusieurs fois dans la page, le style s'appliquera à tous
* couleur de fond grise de la page en ciblant l'élément body */
body {
  font-family: "Open sans", Verdana, sans-serif;
  background-color: rgb(211, 211, 211);
  display: flex;
  flex-direction: column;
  /* margin: 0; */
}
/* Ces selecteurs permettent de mettre en forme que les liens directement dans l'élément body. Ici on leur applique une couleur de fond bisque */
body > a {
  background-color: bisque;
}
/* width permet de régler la largeur d'un élément et heigth la hauteur
*si on indique juste la largeur, la hauteur est calculée automatiquement 
*et proportionnellement */
.smile {
  width: 80%;
}
.lateralbar {
  position: fixed;
  width: 15%;
  height: 99vh;
}
.lateralbar li {
  margin-top: 5%;
}
.container {
  display: flex;
  margin-left: 16%;
}
h1 {
  color: red;
}
h3 {
  text-align: center;
}
/* first-of-type applique le style seulement au 1er element (ici h2) rencontrée dans chaque éléments parents */
h2:first-of-type {
  color: rgb(0, 255, 242);
}
p {
  padding: 1%;
}
/* p:first-of-type {
  color: blue;
  border: 2px solid red;
  padding: 5px;
  font-size: 16px;
} */
/* hover permet de changer le style lorsque la souris survol l'élément choisi ici l'élément p */
/* p:hover {
  color: rgb(42, 165, 93);
} */
/* exemple hover sur un élément H1 */
h1:hover {
  color: blue;
}
.smiley {
  width: 2%;
}
tr,
th {
  border: 2px solid black;
}
td {
  border: 1px solid black;
  padding: 10px;
}
.tableau1 {
  border-collapse: separate;
  border-spacing: 0;
  border-width: 1px 0 0 1px;
  margin: 0 0 1.5em;
  width: 100%;
}
.corpsTableau1 {
  display: table-row-group;
  vertical-align: middle;
  border-color: inherit;
}
/* Alignement des éléments portant la classe "enfants" avec les autres éléments de la page */
.enfants {
  margin-left: 16%;
}
/* On cible le 1er lien se trouvant après un élément p  */
p + a {
  background-color: red;
}
.div {
  color: white; /*Textes des éléments dans les div blancs par héritage*/
  background-color: purple; /*Les div auront un fond violet*/
  width: 85%; /*Définit la largeur des div à 70% de leur parent (body ici)*/
  margin: 3% 0 0 15%;
}
.div h2 {
  text-align: center;
}
span {
  font-weight: bold; /*Les textes seront en gras*/
  background-color: yellow; /*Fond des span jaune*/
  color: black; /*Couleur du texte noire*/
}
.conteneur {
  border: 1px solid black;
  background-color: lightGrey;
  width: 50%;
  margin: 0 auto;
}
.conteneur p {
  font-family: roboto;
  width: 100%;
  background-color: yellow;
}
.conteneur strong,
.conteneur span {
  background-color: red;
}
.grandSmileContainer {
  position: fixed;
  z-index: 1;
  right: 0;
  bottom: 0;
  margin: 0 1% 1% 0;
}
.invisible {
  visibility: hidden;
  width: 100%;
  margin: 0;
  background-color: black;
  color: aliceblue;
}
.nonaffiche {
  display: none;
  width: 100%;
  margin: 0;
  background-color: black;
  color: aliceblue;
}
.contenu {
  display: contents;
  width: 100%;
  margin: 0;
  background-color: black;
  color: rgb(0, 255, 55);
}
.exempleContainer {
  height: 200px;
}
.exemple {
  width: 100px;
  height: 100px;
  display: inline-block;
  border: 1px solid black;
  box-sizing: border-box;
}
.conteneurAbsolu {
  width: 100%;
  height: 200px;
  display: block;
  background-color: rgb(102, 130, 221); /*bleuViolet*/
}
.absolu {
  position: absolute;
}
.relatif {
  position: relative;
}
.haut {
  top: 60px; /*Elément décalé de 50px vers le bas p/r à une origine*/
}
.gauche {
  left: 150px; /*Element décalé de 150px vers la droite p/r à une origine*/
}
.droite {
  right: 30px; /*Element décalé de 30px vers la gauche p/r à une origine*/
}
.bas {
  bottom: 20px; /*Element décalé de 30px vers le haut p/r à une origine*/
}
.bleu {
  background-color: #0af;
}
.vert {
  background-color: #0fa;
}
.flottant {
  width: 200px;
  height: 100px;
  float: left;
  background-color: #0af; /*Bleu*/
}
.vide {
  height: 40px;
  background-color: #0fa; /*Vert*/
}
.para {
  background-color: #ee6; /*Jaune*/
  color: black;
}
.tableau2 {
  border-collapse: collapse;
  margin-top: 2%;
  width: 400px;
  text-align: center;
}
.info {
  background-color: rgb(255, 100, 100);
}
.t1 {
  border: 2px solid black;
}
.t2 td,
.t2 th {
  border: 1px solid orange;
}
video {
  width: 100%;
}
iframe {
  width: 560px;
  height: 315px;
  margin-left: 33%;
}
#ex1 {
  background-color: orange;
}
#ex2 {
  background-color: #d70e76;
}
#ex3 {
  background-color: rgb(0, 120, 240);
}
#ex4 {
  background-color: rgba(0, 120, 240, 0.5);
}
#ex5 {
  background-color: rgba(0, 120, 240, 0.5);
}
#ex5span {
  background-color: yellow;
}
#ex1,
#ex2,
#ex3,
#ex4,
#ex5 {
  padding: 10px;
  border: 1px solid black;
  border-radius: 5px;
  margin-bottom: 20px;
  width: 20%;
  margin: 1% auto;
}
.bgImage {
  width: 300px;
  height: 300px;
  border: 5px solid #333;
  margin: 0 auto;
}
#exemp1 {
  background-image: url("./tortuegeniale.jpg");
}
/* 2 images l'une sur l'autre, dans cette configuration seule tortuegeniale.jpg est visible. smile.jpg est une couche (layer) en dessous */
#exemp2 {
  background-color: black;
  background-image: url("./tortuegeniale.jpg"), url("./smile.png");
}
.repeat1 {
  width: 320px;
  height: 320px;
  border: 5px solid #333;
  margin: 10px auto;
  background-image: url("./smile.png");
  background-color: rgba(255, 255, 0, 0.5);
}
.repeat2 {
  width: 320px;
  height: 160px;
  border: 5px solid #333;
  margin: 10px auto;
  background-image: url("./smile.png");
  background-size: 30%;
  background-color: rgba(255, 255, 0, 0.5);
}
.norepeat {
  background-repeat: no-repeat;
}
.roundnorepeat {
  background-repeat: round no-repeat;
}
.spacenorepeat {
  background-repeat: space no-repeat;
}
.repeat3 {
  width: 320px;
  height: 160px;
  border: 5px solid #333;
  margin: 10px auto;
  background-image: url("./smile.png"), url("./smile_think.png");
  background-size: 20%;
  background-color: rgba(255, 255, 0, 0.5);
  background-repeat: repeat-x, repeat-y; /*repeat no-repeat, no-repeat repeat*/
}
.contain {
  background-size: contain;
  background-repeat: no-repeat;
}
.cover {
  background-size: cover;
  background-repeat: no-repeat;
}
.size {
  background-size: 25% 50%;
}
.size2 {
  background-image: url("./smile.png"), url("./smile_think.png");
  background-size: 25% 50%, contain;
  background-repeat: repeat-x, space;
}
.repeat4 {
  width: 400px;
  height: 100px;
  border: 5px dashed #333;
  padding: 10px;
  margin: 10px auto;
  background-image: url("./tortuegeniale.jpg");
  background-size: 30%;
  background-repeat: no-repeat;
  background-color: rgba(255, 255, 0, 0.5);
}
.borderbox {
  background-origin: border-box;
}
.paddingbox {
  background-origin: padding-box;
}
.contentbox {
  background-origin: content-box;
}
.borderboxcenter {
  background-origin: border-box;
  background-position: center;
}
.borderboxtop {
  background-origin: border-box;
  background-position: top;
}
.contentboxtop {
  background-origin: content-box;
  background-position: top;
}
.borderboxtopright {
  background-origin: border-box;
  background-position: top right;
}
.borderboxbottomright {
  background-origin: border-box;
  background-position: bottom 20px right 100px;
}
.repeat5 {
  width: 300px;
  height: 100px;
  border: 5px dashed #333;
  padding: 10px;
  margin: 10px auto;
  background-image: url("./tortuegeniale.jpg");
  background-size: 40%;
  background-repeat: no-repeat;
  background-color: rgba(255, 255, 0, 0.5);
}
.bobbbcbb {
  background-origin: border-box;
  background-clip: border-box;
}
.bobbbccb {
  background-origin: border-box;
  background-clip: content-box;
}
.bocbbcbb {
  background-origin: content-box;
  background-clip: border-box;
}
.bocbbccb {
  background-origin: content-box;
  background-clip: content-box;
}
.repeat6 {
  width: 300px;
  height: 150px;
  border: 5px dashed #333;
  padding: 10px;
  margin: 10px auto;
  background-color: RGBa(255, 255, 255, 0.5);
}

/*Une déclaration en omettant des valeurs*/
.incomplet {
  background: url("./smile.png") center / 50px repeat-x RGBa(250, 250, 0, 0.2);
}

/*Une déclaration complète*/
.complet {
  background: url("./smile.png") top right / 50px auto repeat-x padding-box
    content-box RGBa(250, 250, 0, 0.2);
}
/*2 images de fond avec background*/
.deuximages {
  background: url("./smile.png") top right / 50px repeat-x content-box,
    url("./smile_think.png") bottom left / 50px no-repeat RGBa(250, 250, 0, 0.2);
}
.degrade {
  width: 50%;
  height: 100px;
  border: 2px solid #333;
  margin: 10px auto;
}

.lineargradient {
  background: linear-gradient(yellow, red);
}
.lineargradienttobottom {
  background: linear-gradient(to bottom, yellow, red);
}
.lineargradient180 {
  background: linear-gradient(180deg, yellow, red);
}
.lineargradienttobottom0100 {
  background: linear-gradient(to bottom, yellow 0%, red 100%);
}
.lineargradienttotopcolorinverse {
  background: linear-gradient(to top, red, yellow);
}
/*Un dégradé linéaire à 3 couleurs*/
.degrade3colors {
  background: linear-gradient(yellow, red, purple);
}
/*Color stops personnalisés*/
.degrade3colorscolstop {
  background: linear-gradient(yellow 40%, red 60%, purple);
}
.degrade3colorscolstopneg {
  background: linear-gradient(yellow -40%, red 20%, purple);
}
/*Un dégradé linéaire bleu -> vert*/
.bleuvert {
  background: linear-gradient(RGB(0, 120, 240), RGB(0, 240, 120));
}

/*Un dégradé linéaire bleu -> vert semi transparent*/
.bleuvertst {
  background: linear-gradient(RGBa(0, 120, 240, 0.5), RGBa(0, 240, 120, 0.5));
}

/*Dégradé bleu semi transparent au début, opaque au milieu puis semi transparent à la fin*/
.bleustbleubleust {
  background: linear-gradient(
    RGBa(0, 120, 240, 0.5),
    RGB(0, 120, 240),
    RGBa(0, 120, 240, 0.5)
  );
}
/*Un dégradé linéaire semi transparent devant une image de fond*/
.degradedevant {
  background: linear-gradient(RGBa(0, 120, 240, 0.2), RGBa(0, 240, 120, 0.2)),
    url("./smile.png") no-repeat top;
}

/*L'inverse ( image de fond devant le dégradé )*/
.imagedevant {
  background: url("./smile.png") no-repeat top,
    linear-gradient(
      RGBa(0, 120, 240, 0.2),
      RGB(0, 120, 240),
      RGBa(0, 120, 240, 0.2)
    );
}
/*Dégradé jaune-> rouge-> violet*/
.degradejaunerougeviolet {
  background: linear-gradient(
    RGB(240, 240, 0),
    RGB(240, 0, 0),
    RGB(120, 0, 240)
  );
}

/*Dégradé bleu foncé-> bleu-> vert*/
.degradebleufoncebleuvert {
  background: linear-gradient(RGB(0, 0, 120), RGB(0, 0, 240), RGB(0, 240, 0));
}

/*Mélange des deux dégradés précédents*/
.degrademelange {
  background: linear-gradient(
      RGBa(240, 240, 0, 0.5),
      RGBa(240, 0, 0, 0.5),
      RGBa(120, 0, 240, 0.5)
    ),
    linear-gradient(
      RGBa(0, 0, 120, 0.5),
      RGBa(0, 0, 240, 0.5),
      RGBa(0, 240, 0, 0.5)
    );
}
.yellowred10blue20 {
  background: linear-gradient(yellow, red 10%, blue 20%);
}
.repeatyellowred10blue20 {
  background: repeating-linear-gradient(yellow, red 10%, blue 20%);
}
.repeatyellowred10blue20yellow30 {
  background: repeating-linear-gradient(yellow, red 10%, blue 20%, yellow 30%);
}
.degraderadial {
  width: 80%;
  height: 120px;
  border: 2px solid #333;
  margin: 10px auto;
}

.radialyellowgreenblue {
  background: radial-gradient(yellow, green, blue);
}
.radialcircleyellowgreenblue {
  background: radial-gradient(circle, yellow, green, blue);
}
.radialyellow40green60blue {
  background: radial-gradient(yellow 40%, green 60%, blue);
}
.radialattopyellowgreenblue {
  background: radial-gradient(at top, yellow, green, blue);
}
.radialat2080yellowgreenblue {
  background: radial-gradient(at 20% 80%, yellow, green, blue);
}
.radialclosestyellowgreenblue {
  background: radial-gradient(closest-side, yellow, green, blue);
}
.radialclosestcircleyellowgreenblue {
  background: radial-gradient(closest-side circle, yellow, green, blue);
}
.radial100circleattopyellowgreenblue {
  background: radial-gradient(100px circle at top, yellow, green, blue);
}
.radial10050at2050yellow40green60blue {
  background: radial-gradient(
    100px 50px at 25% 50%,
    yellow 40%,
    green 60%,
    blue
  );
}

/*Déclaration aberrante*/
.radialaberrant {
  background: radial-gradient(
    100px 50px circle at 25% 50%,
    yellow,
    green,
    blue
  );
}

.boitedombre {
  border: 2px solid #777; /*Bordure de 2px*/
  width: 80%; /*Largeur des divs = 80% de la page*/
  margin: 0 auto; /*Centre nos div dans la page*/
  background-color: #fbb854; /*Fond orangé*/
  margin-bottom: 50px; /*Marge externe basse de 50px*/
  padding: 10px; /*Marges internes de 10px*/
  box-sizing: border-box; /*Contenu + padding + border = 80%*/
}

/*Projection : 10px à droite, 10px vers le bas*/
.ombre1 {
  box-shadow: 10px 10px black;
}

/*Projection : 10px à droite, 20px vers le haut*/
/*Le texte de la boite est bleu, l'ombre aussi par défaut*/
.ombre2 {
  box-shadow: 10px -20px;
  color: blue;
}

/*Projection : 20px à gauche, 0px verticalement*/
.ombre3 {
  box-shadow: -20px 0px black;
}

/*Projection : 0px (pas de projection)*/
.ombre4 {
  box-shadow: 0px 0px;
}

/*Projection : 10px à droite, 10px vers le bas*/
.ombre1inset {
  box-shadow: inset 10px 10px black;
}

/*Projection interne: 10px à droite, 20px vers le haut*/
/*Le texte de la boite est bleu*/
.ombre2inset {
  box-shadow: inset -10px -20px #0aa;
  color: blue;
}

/*Projection interne: 20px à droite, 0px verticalement couleur rose semi-transparent*/
.ombre3inset {
  box-shadow: inset 20px 0px RGBa(150, 80, 150, 0.5); /*Rose ?*/
}
.ombre1flou {
  box-shadow: 10px 10px 10px orange;
}
.ombre2flou {
  box-shadow: inset 10px -20px 5px #0aa; /*Ombre vert-bleu*/
  color: blue;
}
.ombre3flou {
  box-shadow: -20px 0px 20px RGBa(255, 0, 0, 0.5);
}
.ombre4flou {
  box-shadow: inset 0px 0px 20px red;
}
